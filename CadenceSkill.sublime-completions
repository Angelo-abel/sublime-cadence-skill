{
	"scope": "source.skill",
	"completions":
	[
		"abs",
		"acos",
		"acosh",
		"add1",
		"addConstructor",
		"addDefstructClass",
		"addDestructor",
		"then",
		"addToNameSpace",
		"alias",
		"allocDebug",
		"allocate",
		"alphaNumCmp",
		"alphalessp",
		"and",
		"andmap",
		"append",
		"append1",
		"apply",
		"argc",
		"arglist",
		"argv",
		"arrayp",
		"arrayref",
		"asin",
		"asinh",
		"assoc",
		"assq",
		"assv",
		"atan",
		"atan2",
		"atanh",
		"atof",
		"atoi",
		"atom",
		"band",
		"bcdp",
		"begin",
		"bindStringArgs",
		"bitfield",
		"bitfield1",
		"blankstrp",
		"bnand",
		"bnor",
		"bnot",
		"boolean?",
		"booleanp",
		"bor",
		"boundp",
		"break",
		"breakHandler",
		"breakpt",
		"buildString",
		"bxnor",
		"bxor",
		"callAs",
		"callInitProc",
		"callNextMethod",
		"callUserInitProc",
		"call_cc",
		"case",
		"caseq",
		"cdsGetInstPath",
		"ceiling",
		"cfiCatch",
		"cfiThrow",
		"cfiUnwindProtect",
		"changeWorkingDir",
		"charToInt",
		"className",
		"classOf",
		"classSuper",
		"classp",
		"clear",
		"clearDefstruct",
		"clearExitProcs",
		"clearFnWriteProtect",
		"close",
		"compareTime",
		"compress",
		"concat",
		"cond",
		"cons",
		"cons*",
		"constar",
		"cont",
		"continue",
		"continue2",
		"copy",
		"copyAllDefstructs",
		"copyDefstructDeep",
		"copyStructDeep",
		"copy__tm_",
		"cos",
		"cosh",
		"count",
		"cprintf",
		"cputime",
		"cqTestcov",
		"createDir",
		"csh",
		"ctoplevel",
		"dbx",
		"debug",
		"debugErrorHandler",
		"debugErrorHandler",
		"debugQuit",
		"debugStatus",
		"debugger",
		"declare",
		"declareLambda",
		"declareNLambda",
		"declareSQNLambda",
		"decode",
		"def",
		"defCapDepends",
		"defCapPrefixes",
		"defGroup",
		"defInitProc",
		"defMathConstants",
		"defPrereq",
		"defUserInitProc",
		"defgeneric",
		"define",
		"define_syntax",
		"defmacro",
		"defmethod",
		"defprop",
		"defstruct",
		"defstructp",
		"defsyntax",
		"defvar",
		"delFromNameSpace",
		"deleteDir",
		"deleteFile",
		"describe",
		"difference",
		"disableResume",
		"display",
		"do",
		"drain",
		"dtpr",
		"dump",
		"duplicate_symbols",
		"echo",
		"ed",
		"edi",
		"edit",
		"editFile",
		"editFunction",
		"editLoad",
		"editVariable",
		"else",
		"edl",
		"enableResume",
		"encrypt",
		"env",
		"envobj",
		"eq",
		"eq?",
		"equal",
		"equal?",
		"eqv",
		"eqv?",
		"err",
		"error",
		"errset",
		"errset_s",
		"errsetstring",
		"errsetstring_s",
		"euEndIgnoredFnMessages",
		"euInitIgnoredFnMessages",
		"euRepAddPriority",
		"euRepAuthorise",
		"euRepAuthorised",
		"euRepCausesFail",
		"euRepClassNames",
		"euRepCloseLogFile",
		"euRepCompLists",
		"euRepCreateNewIgnoreForm",
		"euRepDisable",
		"euRepDisplayIgnoreForm",
		"euRepFinish",
		"euRepGetCount",
		"euRepGetFormatString",
		"euRepGetGroup",
		"euRepGetLogFile",
		"euRepGetStatus",
		"euRepGroupCB",
		"euRepIDNames",
		"euRepIgnore",
		"euRepIgnoreFormCallback",
		"euRepIgnored",
		"euRepIncCount",
		"euRepInitDB",
		"euRepIntAuthorised",
		"euRepIntCheckPriority",
		"euRepIntGetMessage",
		"euRepIntPriorityTranslate",
		"euRepIntSuppressed",
		"euRepMoveSelected",
		"euRepOpenLogFile",
		"euRepPPMessages",
		"euRepPopDB",
		"euRepPrintAuthorised",
		"euRepPrintIgnored",
		"euRepPrintScreen",
		"euRepPrintSuppressed",
		"euRepPushDB",
		"euRepRegister",
		"euRepRegisterInt",
		"euRepRegisterList",
		"euRepReport",
		"euRepReportU",
		"euRepSetStatus",
		"euRepSortMess",
		"euRepStart",
		"euRepSuppress",
		"euRepSuppressed",
		"euRepUnauthorise",
		"euRepUnignore",
		"euRepUnsuppress",
		"eval",
		"evalalias",
		"evalstring",
		"even?",
		"evenp",
		"exists",
		"exit",
		"exp",
		"expand1",
		"expandMacro",
		"expt",
		"fatal",
		"fboundp",
		"fdoc",
		"fileLength",
		"fileSeek",
		"fileTell",
		"fileTimeModified",
		"findClass",
		"fix",
		"fixp",
		"float",
		"floatp",
		"floor",
		"for",
		"for_each",
		"forall",
		"fprintf",
		"fscanf",
		"funcall",
		"function",
		"funobj",
		"gc",
		"gcstats",
		"gcsummary",
		"gensym",
		"geqp",
		"get",
		"getAllLoadedFiles",
		"getCallingFunction",
		"getCapDepends",
		"getCapPrefixes",
		"getCurrentTime",
		"getDepends",
		"getDirFiles",
		"getFnReadProtect",
		"getFnWriteProtect",
		"getFunType",
		"getFunctions",
		"getInstallPath",
		"getLoadByte",
		"getLoadFile",
		"getLoadLine",
		"getLogin",
		"getPrompts",
		"getSGq",
		"getShellArgs",
		"getShellEnvVar",
		"getSkillPath",
		"getSkillVersion",
		"getSystemName",
		"getTempDir",
		"getVarWriteProtect",
		"getVersion",
		"getWarn",
		"getWorkingDir",
		"get_filename",
		"get_pname",
		"get_string",
		"getc",
		"getchar",
		"getd",
		"getdisc",
		"getl",
		"getmethod",
		"getq",
		"getqq",
		"gets",
		"go",
		"greaterp",
		"help",
		"hprof",
		"hprofSetFileName",
		"ilAllocDebug",
		"ilAllocStats",
		"ilAutoStacktraceCB",
		"ilBreakForm",
		"ilBreakFormCB",
		"ilBuildBreakForm",
		"ilBuildDebugToolBoxForm",
		"ilBuildProfileFixedMenu",
		"ilBuildProfileMenus",
		"ilBuildProfilePulldown1",
		"ilBuildProfilePulldown2",
		"ilBuildProfileWindow",
		"ilBuildToolBoxForm",
		"ilBuildTraceForm",
		"ilCheck",
		"ilContinueCB",
		"ilCreateToolBox",
		"ilCreateToolBoxMenu",
		"ilDebugCheckFunction",
		"ilDebugQuitCB",
		"ilDebugResetForms",
		"ilDebugToolBox",
		"ilDebugViewMenu",
		"ilDisplayView",
		"ilDumpCB",
		"ilDumpCFuncs",
		"ilDumpPages",
		"ilEditFileErrHandler",
		"ilEval",
		"ilGetDeepestAlias",
		"ilGetDefiningCapForFn",
		"ilGetDefiningCapForVar",
		"ilGetTemplate",
		"ilInstallDebuggerCB",
		"ilIsDebuggerInstalled",
		"ilIsOpusRunning",
		"ilNextCB",
		"ilPrintTCov",
		"ilProfBuildFilterForm",
		"ilProfBuildHProfForm",
		"ilProfBuildSetupForm",
		"ilProfBuldFileMenu",
		"ilProfCloseWindowCB",
		"ilProfCodeBrowserCB",
		"ilProfDisplayHProf",
		"ilProfDisplayHelp",
		"ilProfDisplaySummary",
		"ilProfFilterCB",
		"ilProfFilterFormCB",
		"ilProfGetHProfFileCB",
		"ilProfInitIcons",
		"ilProfResetCB",
		"ilProfSetupCB",
		"ilProfStartCB",
		"ilProfStartMemoryMenuCB",
		"ilProfStartTimeMenuCB",
		"ilProfStopCB",
		"ilProfSwitchSortCB",
		"ilProfType",
		"ilProfUpdateStatus",
		"ilProfWindow",
		"ilProfileViewFile",
		"ilProfileViewFunction",
		"ilProfileViewFunctionCB",
		"ilSetErrorCompat",
		"ilStacktraceCB",
		"ilStepCB",
		"ilStepoutCB",
		"ilTCovInit",
		"ilToolBox",
		"ilToolBoxCheckin",
		"ilTraceCB",
		"ilTraceEditCB",
		"ilTraceForm",
		"ilTraceNoEditCB",
		"ilViewBuildFileMenu",
		"ilWhereCB",
		"iliAddReader",
		"iliAddWriter",
		"iliBldClassDefaultMethods",
		"iliBldSlotAccessors",
		"iliBuildCopier",
		"iliBuildMaker",
		"iliBuildMaster",
		"iliCheckClassArgs",
		"iliClearCStackTop",
		"iliConstructApplyArgs",
		"iliConstructArgsFromOptions",
		"iliCopyDefstruct",
		"iliDebugOnErrorCB",
		"iliDebugOnErrorp",
		"iliDefineDefaultReader",
		"iliDefineDefaultWriter",
		"iliDefineReaderGeneric",
		"iliDefineWriterGeneric",
		"iliDefstruct",
		"iliEdit",
		"iliEnsureClass",
		"iliEnsureGeneric",
		"iliEnsureMethod",
		"iliFinalizeSlotSpec",
		"iliFinalizeSuperSlots",
		"iliGenSkillDataPath",
		"iliGetAllCapabilities",
		"iliGetAllSuperclasses",
		"iliGetDebugLine",
		"iliGetDirFiles",
		"iliGetSuperClassSlots",
		"iliListFunctions",
		"iliLoadTmpFile",
		"iliMakeDefstruct",
		"iliNoDuplicates",
		"iliPrintVal",
		"iliProcessClassOptions",
		"iliProcessClassSlots",
		"iliProcessSuperclasses",
		"iliSetDebugPortLine",
		"iliTerminateDebuggerCB",
		"iliWriteFormToFile",
		"importSkillVar",
		"inScheme",
		"inSkill",
		"include",
		"includePort",
		"index",
		"infile",
		"info",
		"inportp",
		"installDebugger",
		"instring",
		"intToChar",
		"integer?",
		"integerp",
		"intern",
		"ipcActivateBatch",
		"ipcActivateMessages",
		"ipcBatchProcess",
		"ipcBeginProcess",
		"ipcCheck",
		"ipcCloseProcess",
		"ipcContProcess",
		"ipcGetExitStatus",
		"ipcGetPid",
		"ipcGetPriority",
		"ipcGetProcessPid",
		"ipcIPCDebug",
		"ipcIsActiveProcess",
		"ipcIsAliveProcess",
		"ipcKillAllProcesses",
		"ipcKillProcess",
		"ipcReadProcess",
		"ipcSetPriority",
		"ipcSkillProcess",
		"ipcSleep",
		"ipcSoftInterrupt",
		"ipcStopProcess",
		"ipcWait",
		"ipcWaitForProcess",
		"ipcWriteProcess",
		"isCallable",
		"isClass",
		"isContextLoaded",
		"isDir",
		"isExecutable",
		"isFile",
		"isFileEncrypted",
		"isFileName",
		"isGeneric",
		"isInfinity",
		"isLargeFile",
		"isLink",
		"isMacro",
		"isNaN",
		"isNameSpaceMember",
		"isReadable",
		"isSkillDev",
		"isWritable",
		"lambda",
		"lambda_rules",
		"last",
		"lbsDefaultQueueGet",
		"lbsFilterJobsGet",
		"lbsIsInitialized",
		"lbsJobBeginTimeLimitGet",
		"lbsJobCmdNameGet",
		"lbsJobDependencyGet",
		"lbsJobDispatchTimeGet",
		"lbsJobErrFileGet",
		"lbsJobExeHostGet",
		"lbsJobHomeDirGet",
		"lbsJobInFileGet",
		"lbsJobIsValid",
		"lbsJobJobNameGet",
		"lbsJobKill",
		"lbsJobLoginShellGet",
		"lbsJobMailUserGet",
		"lbsJobOutFileGet",
		"lbsJobQueueNameGet",
		"lbsJobResume",
		"lbsJobStateGet",
		"lbsJobSubHostGet",
		"lbsJobSubmit",
		"lbsJobSubmitTimeGet",
		"lbsJobSubmitterGet",
		"lbsJobSuspend",
		"lbsJobTermTimeGet",
		"lbsJobTermTimeLimitGet",
		"lbsJobWait",
		"lbsJobWorkDirGet",
		"lbsMasterHostGet",
		"lbsPanicCallbackSet",
		"lbsQueueHostListGet",
		"lbsQueueListGet",
		"lbssConfigChgCallbackSet",
		"lbssDefaultQueueGet",
		"lbssExit",
		"lbssFilterJobsGet",
		"lbssIsInitialized",
		"lbssJobBeginTimeLimitGet",
		"lbssJobCmdNameGet",
		"lbssJobDependencyGet",
		"lbssJobDispatchTimeGet",
		"lbssJobErrFileGet",
		"lbssJobExeHostGet",
		"lbssJobHomeDirGet",
		"lbssJobInFileGet",
		"lbssJobInterrupt",
		"lbssJobIsValid",
		"lbssJobJobNameGet",
		"lbssJobKill",
		"lbssJobLoginShellGet",
		"lbssJobMailUserGet",
		"lbssJobOutFileGet",
		"lbssJobQueueNameGet",
		"lbssJobReadyWait",
		"lbssJobResume",
		"lbssJobStateGet",
		"lbssJobSubHostGet",
		"lbssJobSubmit",
		"lbssJobSubmitTimeGet",
		"lbssJobSubmitterGet",
		"lbssJobSuspend",
		"lbssJobTermTimeGet",
		"lbssJobTermTimeLimitGet",
		"lbssJobWait",
		"lbssJobWorkDirGet",
		"lbssJobWrite",
		"lbssMasterHostGet",
		"lbssPanicCallbackSet",
		"lbssQueueHostListGet",
		"lbssQueueListGet",
		"lconc",
		"ldiff",
		"lds",
		"leftshift",
		"length",
		"leqp",
		"lessp",
		"let",
		"let*",
		"letrec",
		"letseq",
		"lineread",
		"linereadstring",
		"list",
		"list?",
		"listFunctions",
		"listToVector",
		"listVariables",
		"listp",
		"load",
		"loadContext",
		"loadfile",
		"loadi",
		"loadstring",
		"log",
		"log10",
		"lookupPartialTag",
		"lookupTag",
		"loop_pbs",
		"lowerCase",
		"lsh",
		"macro",
		"makeCapContext",
		"makeInstance",
		"makeNameSpace",
		"makeNamedVector",
		"makeSymbol",
		"makeTable",
		"makeTempFileName",
		"makeTempPort",
		"makeVector",
		"make__tm_",
		"make_lambda_rules",
		"make_syntax_rules",
		"map",
		"mapc",
		"mapcan",
		"mapcar",
		"maplist",
		"max",
		"measureTime",
		"member",
		"memberOf",
		"memq",
		"memv",
		"mergesort",
		"meter",
		"min",
		"minus",
		"minusp",
		"mod",
		"modulo",
		"mprocedure",
		"mpsBGet",
		"mpsBadResult",
		"mpsCheck",
		"mpsClose",
		"mpsDPut",
		"mpsDebug",
		"mpsDefaultSessionHost",
		"mpsDefaultSessionName",
		"mpsEncap",
		"mpsEncap_s",
		"mpsExit",
		"mpsExport",
		"mpsFlush",
		"mpsFlushMsgs",
		"mpsGet",
		"mpsGetAll",
		"mpsGetErrString",
		"mpsImport",
		"mpsImportWithCheck",
		"mpsIsExported",
		"mpsMakePattern",
		"mpsMakeTemplate",
		"mpsNextEvent",
		"mpsNextEventT",
		"mpsNotifyOnExport",
		"mpsPPut",
		"mpsPut",
		"mpsRead",
		"mpsReadAll",
		"mpsRegInterest",
		"mpsRemoteApply",
		"mpsRemove",
		"mpsRemoveAll",
		"mpsSend",
		"mpsSleep",
		"mpsUnregInterest",
		"mpsUnregTemplateID",
		"mpsc",
		"mpsca",
		"mpscat",
		"mpsct",
		"mpscx",
		"msgDisplayDisinterest",
		"msgDisplayInterest",
		"msgDisplayNotify",
		"msgEditDisinterest",
		"msgEditFileDisinterest",
		"msgEditFileInterest",
		"msgEditFileNotify",
		"msgEditInterest",
		"msgEditNotify",
		"msgHiliteDisinterest",
		"msgHiliteInterest",
		"msgHiliteNotify",
		"msgInit",
		"msgSelectDisinterest",
		"msgSelectInterest",
		"msgSelectNotify",
		"msgmGetFuncList",
		"msgmGetRepresentation",
		"msgpCheckEditFileObj",
		"msgpCheckEditObj",
		"msgpCheckHiliteObj",
		"msgpCheckSelectObj",
		"msgpDisplayCbk",
		"msgpEditCbk",
		"msgpEditFileCbk",
		"msgpEditNotify",
		"msgpEditOrDisplayCbk",
		"msgpGenericCbk",
		"msgpGenericDisinterest",
		"msgpGenericInterest",
		"msgpHiliteCbk",
		"msgpSelectCbk",
		"nconc",
		"ncons",
		"needNCells",
		"negative?",
		"negativep",
		"neq",
		"nequal",
		"newline",
		"next",
		"next2",
		"nextMethodp",
		"nindex",
		"nlambda",
		"not",
		"nprocedure",
		"nth",
		"nthcdr",
		"nthelem",
		"null",
		"null?",
		"numOpenFiles",
		"numberp",
		"odd?",
		"oddp",
		"onep",
		"openportp",
		"or",
		"otherp",
		"outfile",
		"outportp",
		"pair?",
		"pairp",
		"parseString",
		"pb_access",
		"pb_control",
		"pb_name",
		"pcreCompile",
		"pcreExecute",
		"pcreExtractMatch",
		"pcreMagic",
		"pcreMatchAssocList",
		"pcreMatchList",
		"pcreMatchp",
		"pcreReplace",
		"pcreSubstitute",
		"peekc",
		"plist",
		"plus",
		"plusp",
		"pop",
		"popErrorHandler",
		"portp",
		"postdecrement",
		"postincrement",
		"pp",
		"ppfunction",
		"ppnewline",
		"pprint",
		"pprof",
		"predecrement",
		"preincrement",
		"prependInstallPath",
		"print",
		"printBlend",
		"printError",
		"printFileDescriptors",
		"printFunctions",
		"printObject",
		"printStack",
		"printVariables",
		"printf",
		"printlev",
		"println",
		"printstring",
		"printstruct",
		"probef",
		"procedurep",
		"profile",
		"profileReset",
		"profileSummary",
		"prog1",
		"prog2",
		"progError",
		"progn",
		"push",
		"pushErrorHandler",
		"putd",
		"putprop",
		"putpropq",
		"putpropqq",
		"quote",
		"quotient",
		"random",
		"range",
		"read",
		"readTable",
		"readstring",
		"real?",
		"realp",
		"regAfterCall",
		"regBeforeCall",
		"regExitAfter",
		"regExitBefore",
		"remExitProc",
		"remainder",
		"remd",
		"remdq",
		"remove",
		"remprop",
		"remq",
		"renameFile",
		"reset",
		"resetAllSafeEval",
		"resetCallBack",
		"resetNotSafeEval",
		"resetSafeEval",
		"resume",
		"return",
		"reverse",
		"rexCompile",
		"rexExecute",
		"rexExtractMatch",
		"rexMagic",
		"rexMatchAssocList",
		"rexMatchList",
		"rexMatchp",
		"rexReplace",
		"rexSubstitute",
		"rightshift",
		"rindex",
		"round",
		"rplaca",
		"rplacd",
		"saveContext",
		"scEval",
		"scanf",
		"schemeTopLevelEnv",
		"set",
		"set!",
		"setContext",
		"setDefaultCxtPath",
		"setDefaultSrcPath",
		"setFnWriteProtect",
		"setNotSafeEval",
		"setPrintDebug",
		"setPrintFile",
		"setPrintStack",
		"setPrompts",
		"setSGq",
		"setSafeEval",
		"setShellEnvVar",
		"setSkillPath",
		"setSlotValue",
		"setVarWriteProtect",
		"set_car",
		"set_cdr",
		"set_loop_pbs",
		"setarglist",
		"setarray",
		"setcar",
		"setcdr",
		"setfdoc",
		"setguard",
		"setof",
		"setplist",
		"setq",
		"setqbitfield",
		"setqbitfield1",
		"setvdoc",
		"sh",
		"shell",
		"signp",
		"simplifyFilename",
		"sin",
		"sinh",
		"skillCoreInit",
		"skillDebugger",
		"skillDevCheckout",
		"skillEval",
		"skillEvalString",
		"sklint",
		"sklint1",
		"sklintAll",
		"sklintAllInit",
		"sklintCtx",
		"sklintInteg",
		"sleep",
		"slotValue",
		"sort",
		"sortcar",
		"sprintf",
		"sqrt",
		"srandom",
		"sscanf",
		"sstatus",
		"stacktrace",
		"startFinder",
		"status",
		"stdobj",
		"step",
		"step2",
		"stepend",
		"stepout",
		"stepout2",
		"strcat",
		"strcmp",
		"stringToFunction",
		"stringToLower",
		"stringToSymbol",
		"stringToThunk",
		"stringToTime",
		"stringToUpper",
		"stringp",
		"strlen",
		"strncat",
		"strncmp",
		"sub1",
		"subclassesOf",
		"subclassp",
		"subst",
		"substring",
		"superclassesOf",
		"sxtd",
		"symbol?",
		"symbolToString",
		"symbolp",
		"symeval",
		"symstrp",
		"syntax_error",
		"syntax_match?",
		"syntax_rules",
		"system",
		"tableToList",
		"tablep",
		"tailp",
		"tan",
		"tanh",
		"tconc",
		"terpri",
		"theEnvironment",
		"timeToString",
		"timeToTm",
		"times",
		"tmToTime",
		"toplevel",
		"toplevelset",
		"toplevelsetstring",
		"trace",
		"tracef",
		"tracep",
		"tracev",
		"truncate",
		"type",
		"typep",
		"unalias",
		"unbreakpt",
		"uncount",
		"uninstallDebugger",
		"unless",
		"unmeter",
		"unprofile",
		"untrace",
		"untracep",
		"untracev",
		"upperCase",
		"usseCompFlags",
		"usseTraceFlags",
		"vdoc",
		"vector",
		"vector?",
		"vectorToList",
		"vectorp",
		"vi",
		"viewFn",
		"vii",
		"vil",
		"warn",
		"where",
		"whereIs",
		"which",
		"write",
		"writeTable",
		"xcons",
		"xdifference",
		"xplus",
		"xquotient",
		"xtimes",
		"zerop",
		"zxtd",
		"caaaar",
		"caaadr",
		"caaar",
		"caadar",
		"caaddr",
		"caadr",
		"caar",
		"cadaar",
		"cadadr",
		"cadar",
		"caddar",
		"cadddr",
		"caddr",
		"cadr",
		"car",
		"cdaaar",
		"cdaadr",
		"cdaar",
		"cdadar",
		"cdaddr",
		"cdadr",
		"cdar",
		"cddaar",
		"cddadr",
		"cddar",
		"cdddar",
		"cddddr",
		"cdddr",
		"cddr",
		"cdr",
		"puts",
		{ "trigger": "axlPathStart","contents": "axlPathStart(${1:l_points} ${2:[f_width]})" },
		{ "trigger": "axlPathArcAngle","contents": "axlPathArcAngle(${1:r_path} ${2:f_width} ${3:l_end_point} ${4:g_clockwise} ${5:f_angle})" },
		{ "trigger": "axlPathArcCenter","contents": "axlPathArcCenter(${1:r_path} ${2:f_width} ${3:l_end_point} ${4:g_clockwise} ${5:l_center})" },
		{ "trigger": "axlPathLine","contents": "axlPathLine(${1:r_path} ${2:f_width} ${3:l_end_point})" },
		{ "trigger": "axlPathGetWidth","contents": "axlPathGetWidth(${1:r_path})" },
		{ "trigger": "axlPathSegGetWidth","contents": "axlPathSegGetWidth(${1:r_pathSeg})" },
		{ "trigger": "axlPathGetPathSegs","contents": "axlPathGetPathSegs(${1:r_path})" },
		{ "trigger": "axlPathGetLastPathSeg","contents": "axlPathGetLastPathSeg(${1:r_path})" },
		{ "trigger": "axlPathSegGetEndPoint","contents": "axlPathSegGetEndPoint(${1:r_pathSeg})" },
		{ "trigger": "axlPathSegGetArcCenter","contents": "axlPathSegGetArcCenter(${1:r_pathSeg})" },
		{ "trigger": "axlPathSegGetArcClockwise","contents": "axlPathSegGetArcClockwise(${1:r_pathSeg})" },
		{ "trigger": "axlPathStartCircle","contents": "axlPathStartCircle(${1:l_location} ${2:f_width})" },
		{ "trigger": "axlDBCreateLine","contents": "axlDBCreateLine(${1:l_points} ${2:[f_width]} ${3:[t_layer]} ${4:[t_netname]} ${5:[0_parent]})" },
		{ "trigger": "axlDBCreateCircle","contents": "axlDBCreateCircle(${1:l_location} ${2:[f_width]} ${3:[t_layer]} ${4:[o_parent]})" },
		{ "trigger": "axlDBCreateCloseShape","contents": "axlDBCreateCloseShape(${1:o_shape})" },
		{ "trigger": "axlDBActiveShape","contents": "axlDBActiveShape()" },
		{ "trigger": "axlDBCreateVoidCircle","contents": "axlDBCreateVoidCircle(${1:o_shape} ${2:l_location} ${3:[f_width]})" },
		{ "trigger": "axlDBCreateVoid","contents": "axlDBCreateVoid(${1:o_shape} ${2:r_path})" },
		{ "trigger": "axlDBCreateRectangle","contents": "axlDBCreateRectangle(${1:l_bBox} ${2:[g_fill]} ${3:[t_layer]} ${4:[t_netname]} ${5:[o_parent]})" },
		{ "trigger": "axlDBCreatePadStack","contents": "axlDBCreatePadStack(${1:t_name} ${2:r_drill} ${3:l_pad} ${4:[g_nocheck]})" },
		{ "trigger": "axlDBCreatePin","contents": "axlDBCreatePin(${1:t_padstack} ${2:l_anchorPoint} ${3:r_pinText} ${4:[f_rotation]})" },
		{ "trigger": "axlDBCreateSymbol","contents": "axlDBCreateSymbol(${1:t_refdes} ${2:l_anchorPoint} ${3:[g_mirror]} ${4:[f_rotation]})" },
		{ "trigger": "axlDBCreateSymbol","contents": "axlDBCreateSymbol(${1:l_symbolData} ${2:l_anchorPoint} ${3:[g_mirror]} ${4:[f_rotation]})" },
		{ "trigger": "axlDBCreateSymbolSkeleton","contents": "axlDBCreateSymbolSkeleton(${1:t_refdes} ${2:l_anchorPoint} ${3:g_mirror} ${4:f_rotation} ${5:l_pinData})" },
		{ "trigger": "axlDBCreateSymbolSkeleton","contents": "axlDBCreateSymbolSkeleton(${1:l_symbolData} ${2:l_anchorPoint} ${3:g_mirror} ${4:f_rotation} ${5:l_pinData})" },
		{ "trigger": "axlDBCreateText","contents": "axlDBCreateText(${1:t_text} ${2:l_anchorPoint} ${3:r_textOrientation} ${4:[t_layer]} ${5:[o_attach]})" },
		{ "trigger": "axlDBCreatePropDictEntry","contents": "axlDBCreatePropDictEntry(${1:t_name} ${2:t_type} ${3:lt_objects} ${4:[ln_range]} ${5:[t_units]})" },		
		{ "trigger": "axlDBAddProp","contents": "axlDBAddProp(${1:lo_attach} ${2:ll_name_value})" },		
		{ "trigger": "axlColorShadowGet","contents": "axlColorShadowGet(${1:g_option})" },
		{ "trigger": "axlIsLayer","contents": "axlIsLayer(${1:t_layer})" },
		{ "trigger": "axlIsVisibleLayer","contents": "axlIsVisibleLayer(${1:t_layer})" },
		{ "trigger": "axlLayerCreateCrossSection","contents": "axlLayerCreateCrossSection(${1:t_Prev_layerName} ${2:t_layerType} ${3:t_materialType} ${4:[t_subclassName]} ${5:[t_planeType]})" },
		{ "trigger": "axlLayerCreateNonConductor","contents": "axlLayerCreateNonConductor(${1:t_layerName})" },
		{ "trigger": "axlLayerGet","contents": "axlLayerGet(${1:t_layer})" },
		{ "trigger": "axlVisibleDesign","contents": "axlVisibleDesign(${1:g_makeVis})" },
		{ "trigger": "axlVisibleGet","contents": "axlVisibleGet()" },
		{ "trigger": "axlVisibleLayer","contents": "axlVisibleLayer(${1:t_layer} ${2:g_makeVis})" },
		{ "trigger": "axlVisibleSet","contents": "axlVisibleSet(${1:l_visList})" },
		{ "trigger": "axlConductorBottomLayer","contents": "axlConductorBottomLayer()" },
		{ "trigger": "axlConductorTopLayer","contents": "axlConductorTopLayer()" },
		{ "trigger": "axlSetPlaneType","contents": "axlSetPlaneType(${1:t_subclassName} ${2:t_planeType})" },
		{ "trigger": "axlSingleSelectPoint","contents": "axlSingleSelectPoint(${1:[l_point]})" },
		{ "trigger": "axlAddSelectPoint","contents": "axlAddSelectPoint(${1:[l_point]})" },
		{ "trigger": "axlSubSelectPoint","contents": "axlSubSelectPoint(${1:[l_point]})" },
		{ "trigger": "axlSingleSelectBox","contents": "axlSingleSelectBox(${1:[l_bBox]})" },
		{ "trigger": "axlAddSelectBox","contents": "axlAddSelectBox(${1:[l_bBox]})" },
		{ "trigger": "axlSubSelectBox","contents": "axlSubSelectBox(${1:[l_bBox]})" },
		{ "trigger": "axlAddSelectAll","contents": "axlAddSelectAll()" },
		{ "trigger": "axlSubSelectAll","contents": "axlSubSelectAll()" },
		{ "trigger": "axlSingleSelectName","contents": "axlSingleSelectName(${1:t_nameType} ${2:l_names})" },
		{ "trigger": "axlAddSelectName","contents": "axlAddSelectName(${1:t_nameType} ${2:l_names})" },
		{ "trigger": "axlSubSelectName","contents": "axlSubSelectName(${1:t_nameType} ${2:l_names})" },
		{ "trigger": "axlSingleSelectObject","contents": "axlSingleSelectObject(${1:lo_dbid})" },
		{ "trigger": "axlAddSelectObject","contents": "axlAddSelectObject(${1:lo_dbid})" },
		{ "trigger": "axlSubSelectObject","contents": "axlSubSelectObject(${1:lo_dbid})" },
		{ "trigger": "axlGetSelSet","contents": "axlGetSelSet()" },
		{ "trigger": "axlGetSelSetCount","contents": "axlGetSelSetCount()" },
		{ "trigger": "axlClearSelSet","contents": "axlClearSelSet()" },
		{ "trigger": "axlGetFindFilter","contents": "axlGetFindFilter(${1:[onButtonF]})" },
		{ "trigger": "axlAutoOpenFindFilter","contents": "axlAutoOpenFindFilter()" },
		{ "trigger": "axlOpenFindFilter","contents": "axlOpenFindFilter()" },
		{ "trigger": "axlCloseFindFilter","contents": "axlCloseFindFilter()" },
		{ "trigger": "axlFindFilterIsOpen","contents": "axlFindFilterIsOpen()" },
		{ "trigger": "axlSelectByProperty","contents": "axlSelectByProperty(${1:t_objectType} ${2:t_property} ${3:[t_value]} ${4:[g_regularExpression]})" },
		{ "trigger": "axlDeleteObject","contents": "axlDeleteObject(${1:lo_dbid})" },
		{ "trigger": "axlDBDeleteProp","contents": "axlDBDeleteProp(${1:lo_attach} ${2:lt_name})" },			
		{ "trigger": "axlWindowBoxGet","contents": "axlWindowBoxGet()" },
		{ "trigger": "axlWindowBoxSet","contents": "axlWindowBoxSet(${1:l_bBox})" },
		{ "trigger": "axlDeleteFillet","contents": "axlDeleteFillet(${1:o_dbid})" },
		{ "trigger": "axlShapeChangeDynamicType","contents": "axlShapeChangeDynamicType(${1:o_shapeId} ${2:g_dynamic} ${3:g_msgs})" },
		{ "trigger": "axlShapeRaisePriority","contents": "axlShapeRaisePriority(${1:o_shapeId})" },
		{ "trigger": "axlShoveItems","contents": "axlShoveItems(${1:l_itemList})" },
		{ "trigger": "axlShoveSetParams","contents": "axlShoveSetParams(${1:l_params})" },
		{ "trigger": "axlDBGetDesign","contents": "axlDBGetDesign()" },
		{ "trigger": "axlIsDBIDType","contents": "axlIsDBIDType(${1:g_dbid})" },
		{ "trigger": "axlDBGetAttachedText","contents": "axlDBGetAttachedText(${1:o_dbid})" },
		{ "trigger": "axlDBGetPad","contents": "axlDBGetPad(${1:o_dbid} ${2:t_layer} ${3:t_type})" },
		{ "trigger": "axlDBGetPropDictEntry","contents": "axlDBGetPropDictEntry(${1:t_name})" },
		{ "trigger": "axlDBGetProperties","contents": "axlDBGetProperties(${1:o_dbid} ${2:[lt_type]})" },
		{ "trigger": "axlDBGetDesignUnits","contents": "axlDBGetDesignUnits()" },
		{ "trigger": "axlDBGetLonelyBranches","contents": "axlDBGetLonelyBranches()" },
		{ "trigger": "axlDBGetConnect","contents": "axlDBGetConnect(${1:o_dbid} ${2:t_full})" },
		{ "trigger": "axlDBGetManhattan","contents": "axlDBGetManhattan(${1:o_dbid_net})" },
		{ "trigger": "axlDBIsBondpad","contents": "axlDBIsBondpad(${1:o_dbid})" },
		{ "trigger": "axlDBIsBondwire","contents": "axlDBIsBondwire(${1:rd_dbid})" },
		{ "trigger": "axlDBIsDiePad","contents": "axlDBIsDiePad(${1:rd_dbid})" },
		{ "trigger": "axlDBIsFixed","contents": "axlDBIsFixed(${1:o_dbid} ${2:[g_showMessage]})" },
		{ "trigger": "axlDBIsPackagePin","contents": "axlDBIsPackagePin(${1:rd_dbid})" },
		{ "trigger": "axlDBIsPlatingbarPin","contents": "axlDBIsPlatingbarPin(${1:rd_dbid})" },
		{ "trigger": "axlGetModuleInstanceDefinition","contents": "axlGetModuleInstanceDefinition(${1:o_modinst})" },
		{ "trigger": "axlGetModuleInstanceLocation","contents": "axlGetModuleInstanceLocation(${1:o_modinst})" },
		{ "trigger": "axlGetModuleInstanceMethod","contents": "axlGetModuleInstanceMethod(${1:o_modinst})" },
		{ "trigger": "axlGetModuleInstanceNetExceptions","contents": "axlGetModuleInstanceNetExceptions(${1:o_modinst})" },
		{ "trigger": "axlIsDummyNet","contents": "axlIsDummyNet(${1:net_dbid})" },
		{ "trigger": "axlIsLayerNegative","contents": "axlIsLayerNegative(${1:t_layerName})" },
		{ "trigger": "axlIsPinUnused","contents": "axlIsPinUnused(${1:pin_dbid})" },
		{ "trigger": "axlIsitFill","contents": "axlIsitFill(${1:t_layer})" },
		{ "trigger": "axlOK2Void","contents": "axlOK2Void(${1:t_layer})" },
		{ "trigger": "axlDBDynamicShapes","contents": "axlDBDynamicShapes(${1:g_value})" },
		{ "trigger": "axlDBGetShapes","contents": "axlDBGetShapes(${1:t_layer})" },
		{ "trigger": "axlDBIsBondingWireLayer","contents": "axlDBIsBondingWireLayer(${1:t_layerName})" },
		{ "trigger": "axlClearDynamics","contents": "axlClearDynamics()" },
		{ "trigger": "axlCancelEnterFun","contents": "axlCancelEnterFun()" },
		{ "trigger": "axlFinishEnterFun","contents": "axlFinishEnterFun()" },
		{ "trigger": "axlHighlightObject","contents": "axlHighlightObject(${1:[lo_dbid]} ${2:[g_permHighlight]})" },
		{ "trigger": "axlDehighlightObject","contents": "axlDehighlightObject(${1:[lo_dbid]} ${2:[g_permHighlight]})" },
		{ "trigger": "axlDrawObject","contents": "axlDrawObject(${1:lo_dbid})" },
		{ "trigger": "axlEraseObject","contents": "axlEraseObject(${1:lo_dbid})" },
		{ "trigger": "axlControlRaise","contents": "axlControlRaise(${1:g_option})" },
		{ "trigger": "axlEnterEvent","contents": "axlEnterEvent(${1:l_eventMask} ${2:t_prompt} ${3:g_snap})" },
		{ "trigger": "axlEventSetStartPopup","contents": "axlEventSetStartPopup(${1:[s_callback]})" },
		{ "trigger": "axlGetTrapBox","contents": "axlGetTrapBox(${1:l_point})" },
		{ "trigger": "axlRatsnestBlank","contents": "axlRatsnestBlank(${1:rd_net})" },
		{ "trigger": "axlRatsnestDisplay","contents": "axlRatsnestDisplay(${1:rd_net})" },
		{ "trigger": "axlShowObjectToFile","contents": "axlShowObjectToFile(${1:lo_dbid} ${2:[t_file_name]})" },
		{ "trigger": "axlUICmdPopupSet","contents": "axlUICmdPopupSet(${1:r_popup})" },
		{ "trigger": "axlMakeDynamicsPath","contents": "axlMakeDynamicsPath(${1:lo_dbidSegs})" },
		{ "trigger": "axlGetVariable","contents": "axlGetVariable(${1:t_variable})" },
		{ "trigger": "axlUnsetVariable","contents": "axlUnsetVariable(${1:t_variable})" },
		{ "trigger": "axlShell","contents": "axlShell(${1:t_command})" },
		{ "trigger": "axlIsProtectAlias","contents": "axlIsProtectAlias(${1:t_alias})" },
		{ "trigger": "axlReadOnlyVariable","contents": "axlReadOnlyVariable(${1:t_variable} ${2:[g_Enable]})" },
		{ "trigger": "axlSetAlias","contents": "axlSetAlias(${1:t_alias} ${2:g_value})" },
		{ "trigger": "axlCancelOn","contents": "axlCancelOn()" },
		{ "trigger": "axlCancelOff","contents": "axlCancelOff()" },
		{ "trigger": "axlCancelTest","contents": "axlCancelTest()" },
		{ "trigger": "axlMeterUpdate","contents": "axlMeterUpdate(${1:x_percentDone} ${2:t_infoString} ${3:[t_infoStr2]})" },
		{ "trigger": "axlMeterIsCancelled","contents": "axlMeterIsCancelled()" },
		{ "trigger": "axlUIConfirm","contents": "axlUIConfirm(${1:t_message})" },
		{ "trigger": "axlUIControl","contents": "axlUIControl(${1:s_name} ${2:[g_value]})" },
		{ "trigger": "axlUIPrompt","contents": "axlUIPrompt(${1:t_message} ${2:[t_default]})" },
		{ "trigger": "axlIsViewFileType","contents": "axlIsViewFileType(${1:g_userType})" },
		{ "trigger": "axlUIViewFileCreate","contents": "axlUIViewFileCreate(${1:t_file} ${2:t_title} ${3:g_deleteFile} ${4:[lx_size]} ${5:[lt_placement]})" },
		{ "trigger": "axlUIViewFileReuse","contents": "axlUIViewFileReuse(${1:r_windowMsg} ${2:t_file} ${3:t_title} ${4:g_deleteFile})" },
		{ "trigger": "axlUIYesNo","contents": "axlUIYesNo(${1:t_message})" },
		{ "trigger": "axlUIWClose","contents": "axlUIWClose(${1:r_window})" },
		{ "trigger": "axlUIWBlock","contents": "axlUIWBlock(${1:r_window})" },
		{ "trigger": "axlUIMultipleChoice","contents": "axlUIMultipleChoice(${1:t_question} ${2:lt_answers})" },
		{ "trigger": "axlUIWBeep","contents": "axlUIWBeep()" },
		{ "trigger": "axlUIDisableQuit","contents": "axlUIDisableQuit(${1:o_window})" },
		{ "trigger": "axlUIWExposeByName","contents": "axlUIWExposeByName(${1:t_windowName})" },
		{ "trigger": "axlUIWSetHelpTag","contents": "axlUIWSetHelpTag(${1:r_window} ${2:t_tag})" },
		{ "trigger": "axlUIWTimerAdd","contents": "axlUIWTimerAdd(${1:o_window} ${2:x_timeout} ${3:g_oneshot} ${4:u_callback})" },
		{ "trigger": "axlUIWTimerRemoveSet","contents": "axlUIWTimerRemoveSet(${1:o_timerId})" },
		{ "trigger": "axlUIYesNoCancel","contents": "axlUIYesNoCancel(${1:t_message} ${2:[t_title]} ${3:[s_default]})" },
		{ "trigger": "axlFormClose","contents": "axlFormClose(${1:r_form})" },
		{ "trigger": "axlFormDisplay","contents": "axlFormDisplay(${1:r_form})" },
		{ "trigger": "axlFormBuildPopup","contents": "axlFormBuildPopup(${1:r_form} ${2:t_field} ${3:l_pairs})" },
		{ "trigger": "axlFormGetField","contents": "axlFormGetField(${1:r_form} ${2:t_field})" },
		{ "trigger": "axlFormListDeleteAll","contents": "axlFormListDeleteAll(${1:r_form} ${2:t_field})" },
		{ "trigger": "axlFormSetField","contents": "axlFormSetField(${1:r_form} ${2:t_field} ${3:g_value})" },
		{ "trigger": "axlFormSetInfo","contents": "axlFormSetInfo(${1:r_form} ${2:t_field} ${3:t_value})" },
		{ "trigger": "axlFormTest","contents": "axlFormTest(${1:t_formName})" },
		{ "trigger": "axlFormRestoreField","contents": "axlFormRestoreField(${1:r_form} ${2:t_field})" },
		{ "trigger": "axlFormTitle","contents": "axlFormTitle(${1:r_form} ${2:t_title})" },
		{ "trigger": "axlIsFormType","contents": "axlIsFormType(${1:g_form})" },
		{ "trigger": "axlFormSetFieldVisible","contents": "axlFormSetFieldVisible(${1:r_form} ${2:t_field} ${3:x_value})" },
		{ "trigger": "axlFormIsFieldVisible","contents": "axlFormIsFieldVisible(${1:r_form} ${2:t_field})" },
		{ "trigger": "axlFormAutoResize","contents": "axlFormAutoResize(${1:r_form})" },
		{ "trigger": "axlFormColorize","contents": "axlFormColorize(${1:o_form} ${2:t_field} ${3:g_option} ${4:g_color})" },
		{ "trigger": "axlFormGetActiveField","contents": "axlFormGetActiveField(${1:r_form})" },
		{ "trigger": "axlFormGridBatch","contents": "axlFormGridBatch(${1:r_cell})" },
		{ "trigger": "axlFormGridCancelPopup","contents": "axlFormGridCancelPopup(${1:r_form} ${2:t_field})" },
		{ "trigger": "axlFormGridDeleteRows","contents": "axlFormGridDeleteRows(${1:r_form} ${2:t_field} ${3:x_row} ${4:x_number})" },
		{ "trigger": "axlFormGridGetCell","contents": "axlFormGridGetCell(${1:r_form} ${2:t_field} ${3:r_cell})" },
		{ "trigger": "axlFormGridInsertCol","contents": "axlFormGridInsertCol(${1:r_form} ${2:t_field} ${3:r_formGridCol})" },
		{ "trigger": "axlIsGridCellType","contents": "axlIsGridCellType(${1:r_cell})" },
		{ "trigger": "axlFormGridInsertRows","contents": "axlFormGridInsertRows(${1:r_form} ${2:t_field} ${3:x_row} ${4:x_number})" },
		{ "trigger": "axlFormGridNewCell","contents": "axlFormGridNewCell()" },
		{ "trigger": "axlFormGridReset","contents": "axlFormGridReset(${1:r_form} ${2:t_field})" },
		{ "trigger": "axlFormGridSetBatch","contents": "axlFormGridSetBatch(${1:r_form} ${2:t_field} ${3:s_callback} ${4:g_pvtData})" },
		{ "trigger": "axlFormGridUpdate","contents": "axlFormGridUpdate(${1:r_form} ${2:t_field})" },
		{ "trigger": "axlFormInvalidateField","contents": "axlFormInvalidateField(${1:r_form} ${2:t_field})" },
		{ "trigger": "axlFormIsFieldEditable","contents": "axlFormIsFieldEditable(${1:r_form} ${2:t_field})" },
		{ "trigger": "axlFormListGetItem","contents": "axlFormListGetItem(${1:r_form} ${2:t_field} ${3:x_index})" },
		{ "trigger": "axlFormListGetSelCount","contents": "axlFormListGetSelCount(${1:r_form} ${2:t_field})" },
		{ "trigger": "axlFormListGetSelItems","contents": "axlFormListGetSelItems(${1:r_form} ${2:t_field})" },
		{ "trigger": "axlFormListSelAll","contents": "axlFormListSelAll(${1:r_form} ${2:t_field} ${3:g_set})" },
		{ "trigger": "axlFormGetFieldType","contents": "axlFormGetFieldType(${1:r_form} ${2:t_field})" },
		{ "trigger": "axlFormGridOptions","contents": "axlFormGridOptions(${1:r_form} ${2:t_field} ${3:s_name} ${4:[g_value]})" },
		{ "trigger": "axlFormSetActiveField","contents": "axlFormSetActiveField(${1:r_form} ${2:t_field})" },
		{ "trigger": "axlFormSetDecimal","contents": "axlFormSetDecimal(${1:o_form} ${2:g_field} ${3:x_decimalPlaces})" },
		{ "trigger": "axlFormSetFieldEditable","contents": "axlFormSetFieldEditable(${1:r_form} ${2:t_field} ${3:g_editable})" },
		{ "trigger": "axlFormSetFieldLimits","contents": "axlFormSetFieldLimits(${1:o_form} ${2:t_field} ${3:g_min} ${4:g_max})" },
		{ "trigger": "axlFormTreeViewChangeLabel","contents": "axlFormTreeViewChangeLabel(${1:r_form} ${2:t_field} ${3:g_hItem} ${4:t_label})" },
		{ "trigger": "axlFormTreeViewGetImages","contents": "axlFormTreeViewGetImages(${1:r_form} ${2:t_field} ${3:g_hItem})" },
		{ "trigger": "axlFormTreeViewGetLabel","contents": "axlFormTreeViewGetLabel(${1:r_form} ${2:t_field} ${3:g_hItem})" },
		{ "trigger": "axlFormTreeViewGetParents","contents": "axlFormTreeViewGetParents(${1:r_form} ${2:t_field} ${3:g_hItem})" },
		{ "trigger": "axlFormTreeViewGetSelectState","contents": "axlFormTreeViewGetSelectState(${1:r_form} ${2:t_field} ${3:g_hItem})" },
		{ "trigger": "axlFormTreeViewLoadBitmaps","contents": "axlFormTreeViewLoadBitmaps(${1:r_form} ${2:t_field} ${3:lt_bitmaps})" },
		{ "trigger": "axlFormTreeViewSet","contents": "axlFormTreeViewSet(${1:r_form} ${2:t_field} ${3:s_option} ${4:g_hItem} ${5:[g_data]})" },
		{ "trigger": "axlFormTreeViewSetSelectState","contents": "axlFormTreeViewSetSelectState(${1:r_form} ${2:t_field} ${3:g_hItem} ${4:g_state})" },
		{ "trigger": "axlGRPDrwBitmap","contents": "axlGRPDrwBitmap(${1:r_graphics} ${2:t_bitmap})" },
		{ "trigger": "axlGRPDrwCircle","contents": "axlGRPDrwCircle(${1:r_graphics} ${2:l_origin} ${3:x_radius})" },
		{ "trigger": "axlGRPDrwInit","contents": "axlGRPDrwInit(${1:r_form} ${2:t_field} ${3:t_func})" },
		{ "trigger": "axlGRPDrwLine","contents": "axlGRPDrwLine(${1:r_graphics} ${2:l_vertices})" },
		{ "trigger": "axlGRPDrwMapWindow","contents": "axlGRPDrwMapWindow(${1:r_graphics} ${2:x_hgt} ${3:x_width})" },
		{ "trigger": "axlGRPDrwPoly","contents": "axlGRPDrwPoly(${1:r_graphics} ${2:l_vertices})" },
		{ "trigger": "axlGRPDrwRectangle","contents": "axlGRPDrwRectangle(${1:r_graphics} ${2:l_upper_left} ${3:l_lower_right})" },
		{ "trigger": "axlGRPDrwText","contents": "axlGRPDrwText(${1:r_graphics} ${2:l_origin} ${3:t_text})" },
		{ "trigger": "axlGRPDrwUpdate","contents": "axlGRPDrwUpdate(${1:r_graphics})" },
		{ "trigger": "axlMsgContextPrint","contents": "axlMsgContextPrint(${1:r_context})" },
		{ "trigger": "axlMsgContextGetString","contents": "axlMsgContextGetString(${1:r_context})" },
		{ "trigger": "axlMsgContextGet","contents": "axlMsgContextGet(${1:r_context})" },
		{ "trigger": "axlMsgContextTest","contents": "axlMsgContextTest(${1:r_context})" },
		{ "trigger": "axlMsgContextInBuf","contents": "axlMsgContextInBuf(${1:r_context} ${2:t_format_string})" },
		{ "trigger": "axlMsgContextRemove","contents": "axlMsgContextRemove(${1:r_context} ${2:t_format_string})" },
		{ "trigger": "axlMsgContextFinish","contents": "axlMsgContextFinish(${1:r_context})" },
		{ "trigger": "axlMsgContextClear","contents": "axlMsgContextClear(${1:r_context})" },
		{ "trigger": "axlMsgCancelPrint","contents": "axlMsgCancelPrint()" },
		{ "trigger": "axlMsgCancelSeen","contents": "axlMsgCancelSeen()" },
		{ "trigger": "axlMsgClear","contents": "axlMsgClear()" },
		{ "trigger": "axlMsgSet","contents": "axlMsgSet(${1:x_class})" },
		{ "trigger": "axlMsgTest","contents": "axlMsgTest()" },
		{ "trigger": "axlCurrentDesign","contents": "axlCurrentDesign()" },
		{ "trigger": "axlDesignType","contents": "axlDesignType(${1:g_detailed})" },
		{ "trigger": "axlSetSymbolType","contents": "axlSetSymbolType(${1:t_symbolType})" },
		{ "trigger": "axlDBControl","contents": "axlDBControl(${1:s_name} ${2:[g_value]})" },
		{ "trigger": "axlDBSectorSize","contents": "axlDBSectorSize(${1:[f_size]})" },
		{ "trigger": "axlGetDrawingName","contents": "axlGetDrawingName()" },
		{ "trigger": "axlKillDesign","contents": "axlKillDesign()" },
		{ "trigger": "axlRenameDesign","contents": "axlRenameDesign(${1:t_design})" },
		{ "trigger": "axlDBChangeDesignExtents","contents": "axlDBChangeDesignExtents(${1:l_bBox})" },
		{ "trigger": "axlDBChangeDesignOrigin","contents": "axlDBChangeDesignOrigin(${1:l_point})" },
		{ "trigger": "axlDBCopyPadstack","contents": "axlDBCopyPadstack(${1:rd_dbid} ${2:l_startEnd} ${3:[g_dontTrim]})" },
		{ "trigger": "axlDBDellLock","contents": "axlDBDellLock(${1:[t_password]})" },
		{ "trigger": "axlDBGetLock","contents": "axlDBGetLock()" },
		{ "trigger": "axlPadStackToDisk","contents": "axlPadStackToDisk(${1:[t_padName]} ${2:[t_outPadName]})" },
		{ "trigger": "axlTechnologyType","contents": "axlTechnologyType()" },
		{ "trigger": "axlTriggerClear","contents": "axlTriggerClear(${1:s_trigger} ${2:s_function})" },
		{ "trigger": "axlTriggerPrint","contents": "axlTriggerPrint()" },
		{ "trigger": "axlTriggerSet","contents": "axlTriggerSet(${1:s_trigger} ${2:s_function})" },
		{ "trigger": "axlTriggerSet","contents": "axlTriggerSet(${1:nil} ${2:nil})" },
		{ "trigger": "axlGetActiveLayer","contents": "axlGetActiveLayer()" },
		{ "trigger": "axlGetActiveTextBlock","contents": "axlGetActiveTextBlock()" },
		{ "trigger": "axlSetActiveLayer","contents": "axlSetActiveLayer(${1:t_layer})" },
		{ "trigger": "axlDBAddGroupObjects","contents": "axlDBAddGroupObjects(${1:o_group} ${2:lo_members})" },
		{ "trigger": "axlDBCreateGroup","contents": "axlDBCreateGroup(${1:t_name} ${2:t_type} ${3:lo_groupMembers})" },
		{ "trigger": "axlDBDisbandGroup","contents": "axlDBDisbandGroup(${1:o_group})" },
		{ "trigger": "axlDBRemoveGroupObjects","contents": "axlDBRemoveGroupObjects(${1:o_group} ${2:lo_members})" },
		{ "trigger": "axlCreateAttachment","contents": "axlCreateAttachment(${1:t_attachmentId} ${2:t_passwd} ${3:x_revision} ${4:s_dataFormat} ${5:t_data})" },
		{ "trigger": "axlDeleteAttachment","contents": "axlDeleteAttachment(${1:t_attachmentId} ${2:[t_passwd]})" },
		{ "trigger": "axlGetAllAttachmentNames","contents": "axlGetAllAttachmentNames()" },				
		{ "trigger": "axlGetAttachment","contents": "axlGetAttachment(${1:t_attachmentId} ${2:[s_dataFormat]})" },
		{ "trigger": "axlIsAttachment","contents": "axlIsAttachment(${1:o_attachment})" },
		{ "trigger": "axlSetAttachment","contents": "axlSetAttachment(${1:o_attachment} ${2:[t_password]})" },
		{ "trigger": "axlDBCloak","contents": "axlDBCloak(${1:g_func} ${2:[g_mode]})" },
		{ "trigger": "axlDBTransactionCommit","contents": "axlDBTransactionCommit(${1:x_mark})" },
		{ "trigger": "axlDBTransactionMark","contents": "axlDBTransactionMark(${1:x_mark})" },
		{ "trigger": "axlDBTransactionOops","contents": "axlDBTransactionOops(${1:x_mark})" },
		{ "trigger": "axlDBTransactionRollback","contents": "axlDBTransactionRollback(${1:x_mark})" },
		{ "trigger": "axlDBTransactionStart","contents": "axlDBTransactionStart()" },
		{ "trigger": "axlCnsAddVia","contents": "axlCnsAddVia(${1:t_csetName} ${2:t_padstackName})" },
		{ "trigger": "axlCnsAssignPurge","contents": "axlCnsAssignPurge(${1:s_tableType})" },
		{ "trigger": "axlCnsDeleteVia","contents": "axlCnsDeleteVia(${1:t_csetName} ${2:t_padstackName})" },
		{ "trigger": "axlCNSDesignModeGet","contents": "axlCNSDesignModeGet(${1:nil})" },
		{ "trigger": "axlCNSDesignModeSet","contents": "axlCNSDesignModeSet(${1:ll_constraintNModes})" },
		{ "trigger": "axlCNSDesignValueGet","contents": "axlCNSDesignValueGet(${1:nil} ${2:[g_returnNameString]})" },
		{ "trigger": "axlCNSDesignValueGet","contents": "axlCNSDesignValueGet(${1:s_name} ${2:[g_returnString]})" },
		{ "trigger": "axlCNSDesignValueSet","contents": "axlCNSDesignValueSet(${1:ll_constraintNValues})" },
		{ "trigger": "axlCNSEcsetGet","contents": "axlCNSEcsetGet(${1:t_name})" },
		{ "trigger": "axlCNSEcsetModeGet","contents": "axlCNSEcsetModeGet(${1:nil})" },
		{ "trigger": "axlCNSEcsetModeSet","contents": "axlCNSEcsetModeSet(${1:ll_constraintNModes})" },
		{ "trigger": "axlCNSEcsetValueGet","contents": "axlCNSEcsetValueGet(${1:nil} ${2:[g_returnNameString]})" },
		{ "trigger": "axlLayerSet","contents": "axlLayerSet(${1:o_dbid})" },
		{ "trigger": "axlCnsList","contents": "axlCnsList(${1:s_tableType})" },
		{ "trigger": "axlCNSMapClear","contents": "axlCNSMapClear()" },
		{ "trigger": "axlCNSMapUpdate","contents": "axlCNSMapUpdate()" },
		{ "trigger": "axlCmdUnregister","contents": "axlCmdUnregister(${1:t_allegroCmd})" },
		{ "trigger": "axlEndSkillMode","contents": "axlEndSkillMode()" },
		{ "trigger": "axlFlushDisplay","contents": "axlFlushDisplay()" },
		{ "trigger": "axlOKToProceed","contents": "axlOKToProceed()" },
		{ "trigger": "axlUIGetUserData","contents": "axlUIGetUserData()" },
		{ "trigger": "axlUIPopupDefine","contents": "axlUIPopupDefine(${1:r_popup} ${2:ts_pairs})" },
		{ "trigger": "axlUIPopupSet","contents": "axlUIPopupSet(${1:r_popup})" },
		{ "trigger": "axlBuildClassPopup","contents": "axlBuildClassPopup(${1:r_form} ${2:t_field})" },
		{ "trigger": "axlBuildSubclassPopup","contents": "axlBuildSubclassPopup(${1:r_form} ${2:t_field} ${3:t_class})" },
		{ "trigger": "axlVisibleUpdate","contents": "axlVisibleUpdate(${1:t_now})" },
		{ "trigger": "axlWindowFit","contents": "axlWindowFit()" },
		{ "trigger": "axlDMFileError","contents": "axlDMFileError()" },
		{ "trigger": "axlDMGetFile","contents": "axlDMGetFile(${1:t_id} ${2:t_name} ${3:t_mode})" },
		{ "trigger": "axlDMOpenFile","contents": "axlDMOpenFile(${1:t_id} ${2:t_name} ${3:t_mode})" },
		{ "trigger": "axlDMOpenLog","contents": "axlDMOpenLog(${1:t_program})" },
		{ "trigger": "axlDMClose","contents": "axlDMClose(${1:p_port})" },
		{ "trigger": "axlDMBrowsePath","contents": "axlDMBrowsePath(${1:t_adsFileType} ${2:[t_title]} ${3:[t_helpTag]})" },
		{ "trigger": "axlDMFileParts","contents": "axlDMFileParts(${1:t_filespec})" },
		{ "trigger": "axlOSFileCopy","contents": "axlOSFileCopy(${1:t_src} ${2:t_dest} ${3:g_append})" },
		{ "trigger": "axlOSFileMove","contents": "axlOSFileMove(${1:t_src} ${2:t__dest})" },
		{ "trigger": "axlOSSlash","contents": "axlOSSlash(${1:t_directory})" },
		{ "trigger": "axlRecursiveDelete","contents": "axlRecursiveDelete(${1:t_directory})" },
		{ "trigger": "axlTempDirectory","contents": "axlTempDirectory()" },
		{ "trigger": "axlTempFile","contents": "axlTempFile(${1:[g_local]})" },
		{ "trigger": "axlTempFileRemove","contents": "axlTempFileRemove(${1:t_filename})" },
		{ "trigger": "axlExtractToFile","contents": "axlExtractToFile(${1:t_viewFile} ${2:lt_resultFiles} ${3:[lt_options]})" },
		{ "trigger": "axlExtractMap","contents": "axlExtractMap(${1:t_viewFile} ${2:[s_applyFunc]} ${3:[g_userData]})" },
		{ "trigger": "axlReportRegister","contents": "axlReportRegister()" },
		{ "trigger": "axlReportRegister","contents": "axlReportRegister(${1:g_reportCallback} ${2:t_description} ${3:t_title})" },
		{ "trigger": "axlCmdList","contents": "axlCmdList()" },
		{ "trigger": "axlGeoArcCenterAngle","contents": "axlGeoArcCenterAngle(${1:l_startPoint} ${2:l_endPoint} ${3:f_angle} ${4:[g_clockwise]})" },
		{ "trigger": "axlGeoArcCenterRadius","contents": "axlGeoArcCenterRadius(${1:l_startPoint} ${2:l_endPoint} ${3:f_radius} ${4:[g_clockwise]} ${5:[g_bigArc]})" },
		{ "trigger": "axlMKSConvert","contents": "axlMKSConvert(${1:nil} ${2:[t_outUnits]})" },
		{ "trigger": "axlMKSConvert","contents": "axlMKSConvert(${1:n_input})" },
		{ "trigger": "axlHttp","contents": "axlHttp(${1:t_url})" },
		{ "trigger": "axlIsDebug","contents": "axlIsDebug()" },
		{ "trigger": "axlLogHeader","contents": "axlLogHeader(${1:p_port} ${2:t_titleString})" },
		{ "trigger": "axlMKS2UU","contents": "axlMKS2UU(${1:t_mksString})" },
		{ "trigger": "axlMKSalias","contents": "axlMKSalias(${1:t_MKSAlias})" },
		{ "trigger": "axlMKSConvert","contents": "axlMKSConvert(${1:n_input} ${2:t_inUnits} ${3:[t_outUnits]})" },
		{ "trigger": "axlMKSConvert","contents": "axlMKSConvert(${1:n_input} ${2:t_inUnits} ${3:[t_outUnits]})" },
		{ "trigger": "axlMKSConvert","contents": "axlMKSConvert(${1:t_input} ${2:[t_outUnits]})" },
		{ "trigger": "axlMKSStr2UU","contents": "axlMKSStr2UU(${1:t_String})" },
		{ "trigger": "axlMapClassName","contents": "axlMapClassName(${1:t_oldName})" },
		{ "trigger": "axlMemSize","contents": "axlMemSize()" },
		{ "trigger": "axlPPrint","contents": "axlPPrint(${1:t_name})" },
		{ "trigger": "axlPdfView","contents": "axlPdfView(${1:t_pdfFile})" },
		{ "trigger": "axlRegexpIs","contents": "axlRegexpIs(${1:t_exp})" },
		{ "trigger": "axlShowObject","contents": "axlShowObject(${1:lud_dbid})" },	
		{ "trigger": "axlSleep","contents": "axlSleep(${1:x_time})" },
		{ "trigger": "axlSort","contents": "axlSort(${1:t_infile} ${2:t_outfile} ${3:[t_sortfields]} ${4:[t_sort_options]})" },
		{ "trigger": "axlStrcmpAlpNum","contents": "axlStrcmpAlpNum(${1:t_str1} ${2:t_str2})" },
		{ "trigger": "axlVersion","contents": "axlVersion(${1:s_option})" },
		{ "trigger": "axlVersionIdGet","contents": "axlVersionIdGet()" },
		{ "trigger": "axlDistance","contents": "axlDistance(${1:l_point1} ${2:l_point2})" },
		{ "trigger": "axlGeoEqual","contents": "axlGeoEqual(${1:f_one} ${2:f_two})" },
		{ "trigger": "axlIsPointInsideBox","contents": "axlIsPointInsideBox(${1:l_point} ${2:l_box})" },
		{ "trigger": "axlIsPointOnLine","contents": "axlIsPointOnLine(${1:l_point} ${2:ll_line})" },
		{ "trigger": "axlLineSlope","contents": "axlLineSlope(${1:ll_line})" },
		{ "trigger": "axlLineXLine","contents": "axlLineXLine(${1:l_seg1} ${2:l_seg2})" },
		{ "trigger": "axlMPythag","contents": "axlMPythag(${1:l_pt1} ${2:l_pt2})" },
		{ "trigger": "axlMXYAdd","contents": "axlMXYAdd(${1:l_pt1} ${2:l_pt2})" },
		{ "trigger": "axlMXYSub","contents": "axlMXYSub(${1:l_pt1} ${2:l_pt2})" },
		{ "trigger": "axl_ol_ol2","contents": "axl_ol_ol2(${1:l_seg1} ${2:l_seg2})" },
		{ "trigger": "axlExtentDB","contents": "axlExtentDB()" },
		{ "trigger": "axlExtentLayout","contents": "axlExtentLayout()" },
		{ "trigger": "axlExtentSymbol","contents": "axlExtentSymbol()" },
		{ "trigger": "axlChangeNet","contents": "axlChangeNet(${1:o_dbid} ${2:t_netname})" },
		{ "trigger": "axlSegDelayAndZ0","contents": "axlSegDelayAndZ0(${1:o_clineSegDbid})" },
		{ "trigger": "axlDBCreateConceptComponent","contents": "axlDBCreateConceptComponent(${1:s_refdes} ${2:s_partPath} ${3:s_logName} ${4:s_primName} ${5:[s_pptRowName]})" },
		{ "trigger": "axlDBCreateConceptComponent","contents": "axlDBCreateConceptComponent(${1:s_refDes} ${2:s_deviceName} ${3:[s_package]} ${4:[s_value]} ${5:[s_tolerance]})" },
		{ "trigger": "axlDBCreateModuleDef","contents": "axlDBCreateModuleDef(${1:t_name} ${2:l_origin} ${3:l_objects})" },
		{ "trigger": "axlDBCreateSymDefSkeleton","contents": "axlDBCreateSymDefSkeleton(${1:l_symbolData} ${2:l_extents} ${3:[l_pinData]})" },
		{ "trigger": "axlDbidName","contents": "axlDbidName(${1:o_dbid})" },
		{ "trigger": "axlDiffPairAuto","contents": "axlDiffPairAuto(${1:t_diffPairPrefix} ${2:t_posNetPostfix} ${3:t_negNetPostfix} ${4:[g_returnDiffPairList]})" },
		{ "trigger": "axlDiffPairDBID","contents": "axlDiffPairDBID(${1:t_name})" },
		{ "trigger": "axlMatchGroupCreate","contents": "axlMatchGroupCreate(${1:t_name})" },
		{ "trigger": "axlPinPairSeek","contents": "axlPinPairSeek(${1:o_pin1} ${2:o_pin2})" },
		{ "trigger": "axlRemoveNet","contents": "axlRemoveNet(${1:t_name})" },
		{ "trigger": "axlRemoveNet","contents": "axlRemoveNet(${1:o_dbid})" },
		{ "trigger": "axlRenameNet","contents": "axlRenameNet(${1:t_old_name} ${2:t_new_name})" },
		{ "trigger": "axlRenameNet","contents": "axlRenameNet(${1:o_dbid} ${2:t_new_name})" },
		{ "trigger": "axlWriteDeviceFile","contents": "axlWriteDeviceFile(${1:o_compDefDbid} ${2:[t_output_dir]})" },
		{ "trigger": "axlWritePackageFile","contents": "axlWritePackageFile(${1:o_symDefDbid} ${2:[t_output_dir]})" },
		{ "trigger": "axlLoadPadstack","contents": "axlLoadPadstack(${1:t_padname})"}, 
		{ "trigger": "axlGetParam","contents": "axlGetParam(${1:t_parm_name})"}, 
		{ "trigger": "axlSetParam","contents": "axlSetParam(${1:o_paramDbid})"}, 
		{ "trigger": "axlSelectByName","contents": "axlSelectByName(${1:t_objectType} ${2:t_name/lt_name} ${3:[g_wildcard]})"}, 
		{ "trigger": "axlGetLastEnterPoint","contents": "axlGetLastEnterPoint()"}, 
		{ "trigger": "axlReplacePadstack","contents": "axlReplacePadstack(${1:o_dbid/lo_dbid} ${2:o_padstackdbid/t_padname})"}, 
		{ "trigger": "axlFillet","contents": "axlFillet(${1:o_dbid})"}, 
		{ "trigger": "axlPurgePadstack","contents": "axlPurgePadstack(${1:S_mode} ${2:t/nil})"}, 
		{ "trigger": "axlGetDynamicsSegs","contents": "axlGetDynamicsSegs(${1:l_point1} ${2:l_point2} ${3:r_lastPath/nil})"}, 
		{ "trigger": "axlMiniStatusLoad","contents": "axlMiniStatusLoad(${1:s_formHandle} ${2:t_formFile} ${3:g_formAction} ${4:[g_StringOption]} ${5:[t_restrict]})"},
		{ "trigger": "axlDynamicsObject","contents": "axlDynamicsObject(${1:lo_dbid})"}, 
		{ "trigger": "axlMeterDestroy","contents": "axlMeterDestroy()"}, 
		{ "trigger": "axlUIMenuLoad","contents": "axlUIMenuLoad(${1:t_menufile})"}, 
		{ "trigger": "axlUIMenuDump","contents": "axlUIMenuDump(${1:t_MenuFile})"}, 
		{ "trigger": "axlGetAllViaList","contents": "axlGetAllViaList(${1:[g_attrVias]})"}, 
		{ "trigger": "axlPolyMemUse","contents": "axlPolyMemUse()"}, 
		{ "trigger": "axlPolyOffset","contents": "axlPolyOffset(${1:o_polygon/lo_polygon} ${2:l_xy} ${3:[g_copy]})"}, 
		{ "trigger": "axlIsPolyType","contents": "axlIsPolyType(${1:g_polygon})"}, 
		{ "trigger": "axlPolyFromHole","contents": "axlPolyFromHole(${1:o_polygon})"}, 
		{ "trigger": "axlPolyErrorGet","contents": "axlPolyErrorGet()"}, 
		{ "trigger": "axlDMFindFile","contents": "axlDMFindFile(${1:t_id} ${2:t_name} ${3:t_mode})"}, 
		{ "trigger": "axlIsHighlighted","contents": "axlIsHighlighted(${1:o_dbid})"}
	]
}